---

- name: internal_host_started_processing_role
  set_fact:
    internal_host_started_processing_role: "jvm"
    java_version: []

# Get java using regex
- name: gather java path
  raw: ps -A -o comm -o args e --columns 10000 | grep java | grep jboss | grep -v "grep" | egrep -o "(\/[[:alnum:]]+)+\/java\s" | uniq
  register: jboss_java_path_internal
  ignore_errors: yes
  when: 'jboss_eap'

# Get java using 'which' command
- name: Execute only when java full path is not available
  raw: which java
  register: jboss_java_path_internal_simple
  ignore_errors: yes
  when: 'jboss_eap and ((jboss_java_path_internal.stdout_lines | length) == 0 or jboss_java_path_internal.stdout == "" or jboss_java_path_internal.rc != 0)'

- name: get java version using regex
  raw: "{{ item | trim }} -version 2>&1"
  register: jboss_java_version_internal
  ignore_errors: yes
  loop: "{{ jboss_java_path_internal.stdout_lines }}"
  when: 'jboss_eap and jboss_java_path_internal_simple is not defined'

- name: get java version using which
  raw: "{{ item | trim }} -version 2>&1"
  register: jboss_java_version_internal
  ignore_errors: yes
  when: 'jboss_eap and jboss_java_path_internal_simple is defined'

- name: set java_version fact from regex
  set_fact:
    java_version: "{{ java_version + [item.stdout] }}"
  ignore_errors: yes
  loop: "{{ jboss_java_version_internal.results }}"
  when: 'jboss_eap and jboss_java_path_internal_simple is not defined'

- name: set java_version fact from which
  set_fact:
    java_version: "{{ item | trim }}"
  ignore_errors: yes
  loop: "{{ jboss_java_version_internal.stdout_lines }}"
  when: 'jboss_eap and jboss_java_path_internal_simple is defined'

# - name: get java version
#   raw: "java -version 2>&1"
#   register: jboss_java_version_internal
#   ignore_errors: yes
#   when: 'jboss_eap'

# - name: set java_version fact
#   set_fact:
#     java_version: "{{ jboss_java_version_internal.stdout | trim }}"
#   ignore_errors: yes
#   when: 'jboss_eap'

# - name: get specific java version
#   raw: "java -version 2>&1 | grep -i version | cut -d'\"' -f2"
#   register: jboss_java_specific_version_internal
#   ignore_errors: yes
#   when: 'jboss_eap'

# - name: set java specific version fact
#   set_fact:
#     java_specific_version: "{{ jboss_java_specific_version_internal.stdout | trim }}"
#   ignore_errors: yes
#   when: 'jboss_eap'








# - name: set java_version fact using stderr
#   set_fact:
#     java_version: "{{ java_version + [item.stderr] }}"
#   ignore_errors: yes
#   loop: "{{ jboss_java_version_internal.results }}"
#   when: jboss_eap and item.stdout == '' and item.rc == 0

- name: gather internal_xms_size
  raw: ps -A -o comm -o args e --columns 10000 | grep java | grep jboss | grep -v "grep" | grep -Pio '(?<=xms)[^ ]+'
  register: internal_xms_size
  ignore_errors: yes
  when: 'jboss_eap'

- name: set xms_size fact
  set_fact:
    xms_size: "{{ internal_xms_size.stdout | trim }}"
  ignore_errors: yes
  when: 'jboss_eap'

- name: gather internal_xmx_size
  raw: ps -A -o comm -o args e --columns 10000 | grep java | grep jboss | grep -v "grep" | grep -Pio '(?<=xmx)[^ ]+'
  register: internal_xmx_size
  ignore_errors: yes
  when: 'jboss_eap'

- name: set xmx_size fact
  set_fact:
    xmx_size: "{{ internal_xmx_size.stdout | trim }}"
  ignore_errors: yes
  when: 'jboss_eap'

- name: gather internal max perm size
  raw: ps -A -o comm -o args e --columns 10000 | grep java | grep jboss | grep -v "grep" | grep -Pio '(?<=MaxPermSize=)[^ ]+'
  register: internal_max_perm_size
  ignore_errors: yes
  when: 'jboss_eap'

- name: set internal max perm size fact
  set_fact:
    max_perm_size: "{{ internal_max_perm_size.stdout | trim }}"
  ignore_errors: yes
  when: 'jboss_eap'

- name: gather internal_command_line_jboss
  raw: ps -A -o comm -o args e --columns 10000 | grep java | grep jboss | grep -v "grep"
  register: internal_command_line_jboss
  ignore_errors: yes
  when: 'jboss_eap'

- name: set command_line_jboss fact
  set_fact:
    command_line_jboss: "{{ internal_command_line_jboss.stdout | trim }}"
  ignore_errors: yes
  when: 'jboss_eap'
