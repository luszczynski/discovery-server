- name: internal_host_started_processing_role
  set_fact:
    internal_host_started_processing_role: "jboss_host_controller"

- name: get jboss.domain.base.dir path
  raw: ps -A -o comm -o args e --columns 10000 | grep java | grep jboss | grep -v "/usr/bin/grep" | grep -Pio '(?<=jboss.domain.base.dir=)[^ ]+'
  register: jboss_domain_base_dir_internal
  ignore_errors: yes
  when: 'jboss_eap and host_controller and (jboss_eap_running_paths | length) > 0'

- name: get jboss.home.dir path
  raw: ps -A -o comm -o args e --columns 10000 | grep java | grep jboss | grep -v "/usr/bin/grep" | grep -Pio '(?<=jboss.home.dir=)[^ ]+'
  register: jboss_home_dir_internal
  ignore_errors: yes
  when: 'jboss_eap and host_controller and jboss_domain_base_dir_internal.rc != 0 and (jboss_eap_running_paths | length) > 0'

- name: List all SHAs from host controller using jboss_domain_base_dir
  shell: "cd {{ jboss_domain_base_dir_internal.stdout | trim }}/domain/data/content && find . -mindepth 2 -type d | tr -d './'"
  register: jboss_host_controller_sha1
  ignore_errors: yes
  when: 'jboss_eap and host_controller and jboss_domain_base_dir_internal.rc == 0 and (jboss_eap_running_paths | length) > 0'

- name: List all SHAs from host controller using jboss.home.dir
  shell: "cd {{ jboss_home_dir_internal.stdout | trim }}/domain/data/content && find . -mindepth 2 -type d | tr -d './'"
  register: jboss_host_controller_sha1
  ignore_errors: yes
  when: 'jboss_eap and host_controller and jboss_domain_base_dir_internal.rc != 0 and (jboss_eap_running_paths | length) > 0'

- name: Find dc-* files
  delegate_to: localhost
  ignore_errors: yes
  find:
    paths: ["/tmp"]
    patterns: 'dc-*.txt'
    file_type: file
  register: search_dc

- name: Search application
  shell: "grep {{ item }} /tmp/dc-*.txt | cut -d, -f1 | uniq"
  ignore_errors: yes
  delegate_to: localhost
  register: application_found
  when: 'jboss_eap and host_controller and search_dc.matched > 0 and (jboss_eap_running_paths | length) > 0'
  with_items: "{{ jboss_host_controller_sha1.stdout_lines }}"

- name: Create empty fact for application 
  set_fact:
    applications: []

- name: Increment facts for application found
  set_fact:
    applications: "{{ applications + [ item.stdout ] }}"
  ignore_errors: yes
  when: 'jboss_eap and host_controller and search_dc.matched > 0 and (jboss_eap_running_paths | length) > 0'
  with_items: "{{ application_found.results }}"