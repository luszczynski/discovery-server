- name: internal_host_started_processing_role
  set_fact:
    internal_host_started_processing_role: "jboss_domain_controller"

- name: Copy lista-deploy.sh to tmp
  copy:
    src: lista-deploy.sh
    dest: /tmp/lista-deploy.sh
    mode: 0755
  ignore_errors: yes
  when: 'jboss_eap and domain_controller'

- name: get jboss.domain.base.dir path
  raw: ps -A -o comm -o args e --columns 10000 | grep java | grep jboss | grep -v "/usr/bin/grep" | grep -Pio '(?<=jboss.domain.base.dir=)[^ ]+'
  register: jboss_domain_base_dir_internal
  ignore_errors: yes
  when: 'jboss_eap and domain_controller'

- name: get jboss.home.dir path
  raw: ps -A -o comm -o args e --columns 10000 | grep java | grep jboss | grep -v "/usr/bin/grep" | grep -Pio '(?<=jboss.home.dir=)[^ ]+'
  register: jboss_home_dir_internal
  ignore_errors: yes
  when: 'jboss_eap and domain_controller and jboss_domain_base_dir_internal.rc != 0'

- name: get all jboss domain deployment using jboss_domain_base_dir_internal
  shell: "/tmp/lista-deploy.sh {{ jboss_domain_base_dir_internal.stdout | trim }}/configuration/domain.xml"
  register: jboss_domain_deployment_json
  ignore_errors: yes
  when: 'jboss_eap and domain_controller and jboss_domain_base_dir_internal.rc == 0'

- name: get all jboss domain deployment using jboss.home.dir
  shell: "/tmp/lista-deploy.sh {{ jboss_home_dir_internal.stdout | trim }}/domain/configuration/domain.xml"
  register: jboss_domain_deployment_json
  ignore_errors: yes
  when: 'jboss_eap and domain_controller and jboss_domain_base_dir_internal.rc != 0'

- name: Loop over SHAs
  shell: "grep {{ item.sha1 }} /tmp/dc-{{inventory_hostname}}.txt || echo {{ item.name }},{{ item.sha1 }} >> /tmp/dc-{{inventory_hostname}}.txt"
  ignore_errors: yes
  delegate_to: localhost
  when: 'jboss_eap and domain_controller'
  with_items: "{{ (jboss_domain_deployment_json.stdout | trim | from_json) }}"